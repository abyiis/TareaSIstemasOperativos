#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_STACK 100

double stack[MAX_STACK];
int sp = 0; // stack pointer

void push(double v) { stack[sp++] = v; }
double pop() { return stack[--sp]; }

int main() {
    char line[256];
    printf("Calculadora RPN (q para salir)\n");

    while (1) {
        printf("> ");
        if (!fgets(line, sizeof(line), stdin)) break;

        if (strcmp(line, "q\n") == 0) break;

        char *tok = strtok(line, " \t\n");
        while (tok) {
            double a, b;
            if (sscanf(tok, "%lf", &a) == 1) {
                push(a);
            } else if (strcmp(tok, "+") == 0) {
                b = pop(); a = pop(); push(a + b);
            } else if (strcmp(tok, "-") == 0) {
                b = pop(); a = pop(); push(a - b);
            } else if (strcmp(tok, "*") == 0) {
                b = pop(); a = pop(); push(a * b);
            } else if (strcmp(tok, "/") == 0) {
                b = pop(); a = pop(); push(a / b);
            } else {
                printf("Token invÃ¡lido: %s\n", tok);
            }
            tok = strtok(NULL, " \t\n");
        }

        if (sp > 0) printf("Top: %g\n", stack[sp - 1]);
    }

    return 0;
}